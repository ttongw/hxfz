//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HanFuEntities : DbContext
    {
        public HanFuEntities()
            : base("name=HanFuEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity> Activity { get; set; }
        public virtual DbSet<Ancomment> Ancomment { get; set; }
        public virtual DbSet<Ancompraise> Ancompraise { get; set; }
        public virtual DbSet<Anreply> Anreply { get; set; }
        public virtual DbSet<Answer> Answer { get; set; }
        public virtual DbSet<Arcomment> Arcomment { get; set; }
        public virtual DbSet<Arreply> Arreply { get; set; }
        public virtual DbSet<Article> Article { get; set; }
        public virtual DbSet<AttendActivity> AttendActivity { get; set; }
        public virtual DbSet<Cart> Cart { get; set; }
        public virtual DbSet<Concern> Concern { get; set; }
        public virtual DbSet<Gcomment> Gcomment { get; set; }
        public virtual DbSet<Good> Good { get; set; }
        public virtual DbSet<GSort> GSort { get; set; }
        public virtual DbSet<Manger> Manger { get; set; }
        public virtual DbSet<OrderItems> OrderItems { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<Pcomment> Pcomment { get; set; }
        public virtual DbSet<Photograph> Photograph { get; set; }
        public virtual DbSet<Phpraise> Phpraise { get; set; }
        public virtual DbSet<Preply> Preply { get; set; }
        public virtual DbSet<RCategory> RCategory { get; set; }
        public virtual DbSet<Relic> Relic { get; set; }
        public virtual DbSet<Rsort> Rsort { get; set; }
        public virtual DbSet<Seller> Seller { get; set; }
        public virtual DbSet<Usr> Usr { get; set; }
        public virtual DbSet<Vcomment> Vcomment { get; set; }
        public virtual DbSet<Video> Video { get; set; }
        public virtual DbSet<Vpraise> Vpraise { get; set; }
        public virtual DbSet<Vreply> Vreply { get; set; }
        public virtual DbSet<Vsort> Vsort { get; set; }
        public virtual DbSet<View_ShopCar> View_ShopCar { get; set; }
        public virtual DbSet<View_UserInfo> View_UserInfo { get; set; }
    
        public virtual int ShopCar_Orders(string users_id, string userName, string userPhone, string address, string note)
        {
            var users_idParameter = users_id != null ?
                new ObjectParameter("Users_id", users_id) :
                new ObjectParameter("Users_id", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var userPhoneParameter = userPhone != null ?
                new ObjectParameter("UserPhone", userPhone) :
                new ObjectParameter("UserPhone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShopCar_Orders", users_idParameter, userNameParameter, userPhoneParameter, addressParameter, noteParameter);
        }
    }
}
